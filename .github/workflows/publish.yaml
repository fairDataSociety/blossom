name: Build and publish the Blossom extension

# GH release doc https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#release
on:
  release:
    types: [published]
    tags-ignore:
      - blossom-lib*
  workflow_dispatch:

env:
  EXTENSION_ID: 'caedjloenbhibmaeffockkiallpngmmd'

jobs:
  publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-npm-ext
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-ext-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-ext-${{ matrix.node }}-${{ env.cache-name }}-
            ${{ runner.OS }}-ext-${{ matrix.node }}-

      - name: Install dependencies
        run: npm ci
        if: steps.cache-npm-ext.outputs.cache-hit != 'true'

      - name: Copy configuration
        run: cp .prod.env .env

      - name: Update manifest version
        run: node ./scripts/update-manifest-version.js

      - name: Build
        run: npm run build

      - name: Publish
        run: ./scripts/publish-extension.sh

      - name: Commit new manifest.json
        uses: EndBug/add-and-commit@v9
        with:
          author_name: CI
          author_email: actions@github.com
          message: 'chore: update manifest.json version'
          add: 'manifest.json'

  placeholder:
    runs-on: ubuntu-latest
    steps:
      - name: Always runs
        run: echo "Prevents the workflow from failing if release is not created."
