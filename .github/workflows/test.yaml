name: Run tests

on:
  push:
    branches: [master]
    paths-ignore:
      - 'library/**'
  pull_request:
    branches: [master]
    paths-ignore:
      - 'library/**'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    env:
      BEE_API_URL: 'http://172.18.0.1:1633'
      BEE_DEBUG_API_URL: 'http://172.18.0.1:1635'
      BEE_PEER_API_URL: 'http://172.18.0.1:11633'
      BEE_PEER_DEBUG_API_URL: 'http://172.18.0.1:11635'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}

      # - name: Cache node modules
      #   id: cache-npm-ext
      #   uses: actions/cache@v3
      #   with:
      #     path: node_modules
      #     key: ${{ runner.os }}-ext-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.OS }}-ext-${{ matrix.node }}-${{ env.cache-name }}-
      #       ${{ runner.OS }}-ext-${{ matrix.node }}-

      # - name: Install dependencies
      #   run: npm ci
      #   if: steps.cache-npm-ext.outputs.cache-hit != 'true'

      # - name: Lint
      #   run: npm run lint:check

      # - name: Cache Swarm extension
      #   id: cache-swarm-ext
      #   uses: actions/cache@v3
      #   with:
      #     path: swarm-extension
      #     key: ${{ runner.os }}-swarm-ext-${{ matrix.node }}-${{ hashFiles('**/swarm-extension/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.OS }}-swarm-ext-${{ matrix.node }}-${{ env.cache-name }}-
      #       ${{ runner.OS }}-node-${{ matrix.node }}-

      # - name: Compile Swarm Extension
      #   run: npm run swarm-ext
      #   if: steps.cache-swarm-ext.outputs.cache-hit != 'true'

      # - name: Copy configuration
      #   run: cp .test.env .env

      # - name: Build
      #   run: npm run build

      # - name: Install fdp-play
      #   run: npm install -g @fairdatasociety/fdp-play

      # - name: Run fdp-play
      #   run: fdp-play start -d

      # - name: Create Postage Batch
      #   run: curl -s -XPOST http://localhost:1635/stamps/10000000/18

      # - name: Run tests
      #   uses: vojtechsimetka/puppeteer-headful@master
      #   env:
      #     CI: 'true'
      #   with:
      #     args: npm run test:ci
