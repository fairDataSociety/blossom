name: Run tests

on:
  push:
    branches: [master]
    paths-ignore:
      - 'library/**'
  pull_request:
    branches: [master]
    paths-ignore:
      - 'library/**'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache node modules
        id: cache-npm-ext
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-ext-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-ext-

      - name: Install Dependencies
        uses: actions/setup-node@v3
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
        with:
          args: install
        if: ${{ steps.cache-npm-ext.outputs.cache-hit != 'true' }}

      - name: Lint
        run: npm run lint:check

      - name: Cache Swarm extension
        id: cache-swarm-ext
        uses: actions/cache@v3
        with:
          path: swarm-extension
          key: ${{ runner.os }}-swarm-ext-${{ hashFiles('**/swarm-extension/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-swarm-ext-

      - name: Compile Swarm Extension
        run: npm run swarm-ext
        if: ${{ steps.cache-swarm-ext.outputs.cache-hit != 'true' }}

      - name: Copy configuration
        run: cp .prod.env .env

      - name: Build
        run: npm run build

      - name: Install fdp-play
        run: npm install -g @fairdatasociety/fdp-play

      - name: Run fdp-play
        run: fdp-play start -d

      - name: Test Code
        uses: mujo-code/puppeteer-headful@v2
        env:
          CI: 'true'
        with:
          args: npm test
